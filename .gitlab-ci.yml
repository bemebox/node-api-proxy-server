# Define the stages of the pipeline
stages:
  - build
  - test
  - deploy

# Build stage
build:
  stage: build
  image: node:16-alpine
  script:
    - echo "Building the node-api-proxy-server..."
    - npm install
    - echo "node-api-proxy-server build complete."
  artifacts:
    paths:
      - node_modules/    

# Test stage
test:
  stage: test
  image: node:16-alpine
  script:
    - echo "Testing the node-api-proxy-server..."
    - npm install
    - npm run test
    - echo "node-api-proxy-server tests complete."
  dependencies:
    - build

# Deploy stage
deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  only:
    - main
  tags:
    - node-api-proxy-server-runner    
  script:
    # Build and deploy
    - echo "Deploing node-api-proxy-server..."
    - docker stop node-api-proxy-server || true
    - docker rm node-api-proxy-server || true
    - docker build -t node-api-proxy-server .
    - docker run --network="servicenet" --name node-api-proxy-server -p 5151:5151 -d node-api-proxy-server
    - docker update --restart unless-stopped node-api-proxy-server
    - echo "Deploy stage complete."